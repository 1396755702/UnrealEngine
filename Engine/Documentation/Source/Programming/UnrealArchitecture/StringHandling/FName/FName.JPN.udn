INTSourceChangelist:2123695
Availability: Public
Title:FName
Crumbs:%ROOT%, Programming, Programming/UnrealArchitecture/Reference, Programming/UnrealArchitecture/Reference/Properties, Programming/UnrealArchitecture/StringHandling
Description: %doxygen:FName%

[TOC (start:2 end:3)]

## 概要


[EXCERPT:Overview]
**コンテンツ ブラウザ** で新規アセットに名前を付ける、ダイナミック マテリアル インスタンスのパラメータを変更する、またはスケルタル メッシュのボーンにアクセスする時、 FNames を使います。再利用した時でも、所定の文字列がデータ テーブルに一度だけ格納される場合、FNames は文字列を使用するための軽量のシステムを提供します。 
Fnames は大文字・小文字を区別しません。変更不可能であり、操作することもできません。Fnames はストレージ システムで静的な性質なので、 
キーを使った参照と Fnames へのアクセスが早いです。FNames サブシステムのもう 1 つの特徴は、ハッシュ表を使用して Fast String を FName へ変換へ提供します。
[/EXCERPT:Overview]

FNames は大文字・小文字を区別せず、インデックスの組み合わせとしてユニークな文字列とインスタンス番号に格納されます。 

## FNames の作成

	FName TestHUDName = FName(TEXT("ThisIsMyTestFName"));


## 変換

FNames は FStrings と FText へのみ変換され、 FStrings からのみ変換できます。

### FName からの変換

|From | To | Example |
|---|------|---------|
%Programming/UnrealArchitecture/StringHandling:fnametofstring%
%Programming/UnrealArchitecture/StringHandling:fnametoftext%

### FName への変換

|From | To | Example |
|---|------|---------|
%Programming/UnrealArchitecture/StringHandling:fstringtofname%
%Programming/UnrealArchitecture/StringHandling:ftexttofname%
 
[REGION:note]
変換中、作成中の Fname の種類に対して有効ではないキャラクターが含まれることがあるので気をつけてください。
`NameTypes.h` の`INVALID_NAME_CHARACTERS` マクロは、 FNames に対して無効なキャラクターを定義し、
 `FName` (such as `IsValidObjectName()`) 内には Fnames の特定の用途に対する有効性を確認する関数があります。
[/REGION]

## 比較

`==` 演算子は、 2 つの Fname の比較に使用し、 `true` あるいは `false` を返します。このように、文字列の比較を行う代わりに `Index` の値を比較することで、 CPU の使用率を大幅に下げることができます。

`FName::Compare` は 2 つの Fname の比較にも使用でき、 this < Other の場合は < 0、this == Other の場合は 0 、 this > Other の場合は> 0 を返します。

	CompareFloat = TestFName.Compare(OtherFName); 

## FNames の使用

FName の使い方は非常に分かりやすいです。アクタのスケルタルメッシュ コンポーネントから「pelvis」という名前のボーンを取得するとします。以下の C++ コードは、 GetBoneRotation() へパスされながらオンザフライで作成された Fname の使用を表します。 

	FRotator rotPelvis = Mesh->MeshGetInstance(this))->GetBoneRotation(FName(TEXT("pelvis")));

これにより、 `GetBoneRotation()` へパスされる FName が作成され、対応するボーンに対して FRotator を返します。パッケージのロード時、ボーン名が FName 表にロードされるので、 
 FName 用のコンストラクタが、割り当てを避けながら、ハッシュ表にあるボーン名を見つけます。


## 名前テーブルの検索

FName が名前テーブルにあるかどうかを、自動追加せずに判断したい場合、 Fname コンストラクタに別の種類の検索を設定することができます。

	if( FName(TEXT("pelvis"), FNAME_Find) != NAME_None )
	{
		// Do something
	}

名前テーブルに名前が存在しない場合、 FName のインデックスを `NAME_None` に設定します。普通の文字列の場合とは違って、 ヌルポインタに対するチェックを行いません。 

INTSourceChangelist:2289772
Availability:Public
Title:アンリアル エンジンのビルド
Crumbs:%ROOT%, Programming, Programming/Development
Description:アンリアル・エンジンのコンパイル

%Globals:OSSelect%

[TOC (start:2 end:3)]

##アンリアルエンジンの設定

[EXCERPT:Main]
[OBJECT:ToggleButtonContent]
	[PARAMLITERAL:category]
	OS
	[/PARAMLITERAL]
	[PARAMLITERAL:id]
	windows
	[/PARAMLITERAL]
	[PARAMLITERAL:active]
	active_button_content
	[/PARAMLITERAL]
	[PARAM:content]
		[REGION:note]
		開始前に、Visual Studio 2013 が実行されていることを確認してください。
		[/REGION]

		エンジンでの作業に取り掛かる前に、基本的な設定手順がいくつかあります。

		1.	ルート ディレクトリに格納されている「GenerateProjectFiles.bat」バッチファイルを実行します。

			[REGION:warning]
				全てのプロジェクトファイルと UE4 ソリューションは中間ファイルであり、`[UE4Root]\Engine\Intermediate\ProjectFiles` に格納されており、Perforce には保存されていません。新しいビルドと同期する度にこれらを生成し、存在することと最新式であることを確認してください。もし中間ファイルを削除した場合、上記で記述したバッチファイルを使用してプロジェクトファイルを再生成する必要があります。
			[/REGION]

		1. 	ルート ディレクトリに格納されている 「UE4.sln」 Visual Studio ソリューションを開きます。これはエンジン全体に対する主要な Visual Studio ソリューションです。エンジンコアやゲームプロジェクトはこのソリューションに格納されています。 

		1. 	**UE4** プロジェクトを **右クリック** して、**「Set As StartUp Project」** を選びます。

		1. 	「UE4.sln」を保存します。次回ソリューションを開く際に上記の手順を再度繰り返さないためにも、変更の保存がされたことを確認してください。
	[/PARAM]
[/OBJECT]
[OBJECT:ToggleButtonContent]
	[PARAMLITERAL:category]
	OS
	[/PARAMLITERAL]
	[PARAMLITERAL:id]
	mac
	[/PARAMLITERAL]
	[PARAMLITERAL:active]
	[/PARAMLITERAL]
	[PARAM:content]
		[REGION:note]
		開始前に、Xcode 5.1 が実行されていることを確認してください。
		[/REGION]

		エンジンでの作業に取り掛かる前に、コンパイルするためにプロジェクト ファイルが必要です。 
		1. ルート ディレクトリに格納されている `GenerateProjectFiles.command` を実行します。完了までに 1 分弱程度かかります。 

		1. オペレーションが完了したら、Terminal ウィンドウを閉じます。

		1. ルート ディレクトリに格納されている `UE4.xcodeproj` Xcode プロジェクトを開きます。これはエンジン全体に対する主要なプロジェクトです。エンジンコア、ツール、ゲームのプロジェクトはこのプロジェクトに格納されています。

		1. Xcode では、アクティブ スキームのために **UE4Editor - Mac** と **My Mac 64-bit** を選択します。

	[/PARAM]
[/OBJECT]


##アンリアルエンジンのコンパイル

アンリアル エンジン4 は、UnrealBuildTool を利用したカスタムビルド方法を使用します。このツールはエンジンのコンパイルに関する全ての複雑な側面と要素を処理します。 

###ビルドコンフィギュレーション

[OBJECT:ToggleButtonContent]
	[PARAMLITERAL:category]
	OS
	[/PARAMLITERAL]
	[PARAMLITERAL:id]
	windows
	[/PARAMLITERAL]
	[PARAMLITERAL:active]
	active_button_content
	[/PARAMLITERAL]
	[PARAM:content]
		全てのコンフィギュレーションがデフォルトで表示されるわけではありません。メインの UE4 ディレクトリにある [GenerateProjectFiles.bat](Programming/UnrealBuildSystem/ProjectFileGenerator) ファイルを編集して、随時追加されるコンフィギュレーションに対してプロジェクト ファイルを生成します。

		エンジンのコンパイル方法を決定する際に、アンリアル エンジン 4 と UnrealBuildTool は異なるビルド コンフィギュレーションを使用します。使用するコンフィギュレーションは、作成するビルドの目的によって決定されます。

		下記が利用可能なコンフィギュレーションになります：

		| ビルド コンフィギュレーション | 説明 |
		|-------------|-------------|
		| **Debug** | デバッグ コンフィギュレーションでエンジンとゲームコードの両方をビルドします。|
		| **DebugGame** | エンジンを最適化してビルドしますが、ゲームコードはデバッグできる状態のままにします。ゲーム モジュールのみをデバッグする場合に理想的なコンフィギュレーションです。|
		| **Development** | リリースと同等のコンフィギュレーションです。エンジンとゲームコードの両方がこのコンフィギュレーションでビルドされます。 |
		| **Shipping** | 最適なパフォーマンスでゲームを出荷するためのコンフィギュレーションです。コンソール コマンド、スタッツ、プロファイリング ツールが取り除かれます。|
		| **Test** | **Shipping** と同じコンフィギュレーションですが、コンソール コマンド、スタッツ、プロファイリング ツールが有効なものがあります。 |

		ビルド コンフィギュレーションは、Visual Studio のツールバーから設定が出来ます。

		![UE4 Solution - Configuration Menu](configuration_menu.png)
	[/PARAM]
[/OBJECT]
[OBJECT:ToggleButtonContent]
	[PARAMLITERAL:category]
	OS
	[/PARAMLITERAL]
	[PARAMLITERAL:id]
	mac
	[/PARAMLITERAL]
	[PARAMLITERAL:active]
	[/PARAMLITERAL]
	[PARAM:content]
		下記が利用可能なコンフィギュレーションになります：

		| ビルド コンフィギュレーション | 説明 |
		| ------------------- | ----------- |
		| **Product > Build For > Running** | デバッグ コンフィギュレーションでエンジンとゲームコードの両方をビルドします。|
		| **Product > Build For > Profiling** | Releaseと同等のコンフィギュレーションです。エンジンとゲームコードの両方がこのコンフィギュレーションでビルドされます。 |
		[/PARAM]

[/OBJECT]

### ターゲットプラットフォーム

現在アンリアル・エンジン 4 は、以下のプラットフォームをサポートしています。

[OBJECT:ToggleButtonContent]
	[PARAMLITERAL:category]
	OS
	[/PARAMLITERAL]
	[PARAMLITERAL:id]
	windows
	[/PARAMLITERAL]
	[PARAMLITERAL:active]
	active_button_content
	[/PARAMLITERAL]
	[PARAM:content]
		* **Windows 32-bit**
		* **Windows 64-bit**


		エンジンそのものをビルドする場合は、**Win64** プラットフォームを使用します。

		![UE4 Solution - Platform Menu](platform_menu.png)
	[/PARAM]
[/OBJECT]
[OBJECT:ToggleButtonContent]
	[PARAMLITERAL:category]
	OS
	[/PARAMLITERAL]
	[PARAMLITERAL:id]
	mac
	[/PARAMLITERAL]
	[PARAMLITERAL:active]
	[/PARAMLITERAL]
	[PARAM:content]
		* **Mac 64-bit**
		* **iOS Device**


		エンジンそのものをビルドする場合は、**Mac 64-bit** プラットフォームを使用します。
	[/PARAM]
[/OBJECT]

(#BinaryNamingConvention)
### バイナリ―命名規則

生成されるバイナリーの名前は、ビルドに使用されたコンフィギュレーションによって異なります。一般的な命名法が以下となります。

|エンジン モード | 命名規則 |
|----------- | ------------------|
| Editor	  | UE4Editor-Platform-Configuration.extension |
| Uncooked Game | UE4-Platform-Configuration.extension |

このルールの例外は PC プラットフォームで、開発コンフィギュレーションのビルド時に、プラットフォームとコンフィギュレーションが省略されます。例えば、Win64 プラットフォームに対して生成される実行ファイルの名前は以下となります。

| コンフィギュレーション | EXE 名 |
| ------------- | -------- |
| Debug | UE4Editor-Win64-Debug.exe |
| DebugGame | UE4Editor-Win64-DebugGame.exe |
| Development | UE4Editor.exe |


### エンジンのビルド

[OBJECT:ToggleButtonContent]
	[PARAMLITERAL:category]
	OS
	[/PARAMLITERAL]
	[PARAMLITERAL:id]
	windows
	[/PARAMLITERAL]
	[PARAMLITERAL:active]
	active_button_content
	[/PARAMLITERAL]
	[PARAM:content]
		1.	ビルドしたいコンフィギュレーションに **Build Configuration** を設定します。この例では、**Development** に設定されています。有効なコンフィギュレーションのそれぞれの詳細は [ビルドコンフィギュレーション](#ビルドコンフィギュレーション) セクションを参照してください。

			![UE4 Solution - Set Configuration to Development](config_development_menu.png)

		1.	**UE4** プロジェクトを **右クリック** します。 

			1. 「**Clean** 」を選んで、コンパイル済みまたは仮のファイルをクリーンアップします。この作業によって、次回のビルドが完全な再ビルドとなることが保証されます。

			1.	「**Rebuild**」を選んでエンジンを再コンパイルします。

		または、**UE4** プロジェクトがまだスタートアップ プロジェクトに設定されていない場合は

		1. **Build Configuration** を設定します。

		1. **Build** メニューから以下を行います。

			1. **UE4 をクリーンアップ**
	1. **UE4 を再ビルド**

	[/PARAM]
[/OBJECT]
[OBJECT:ToggleButtonContent]
	[PARAMLITERAL:category]
	OS
	[/PARAMLITERAL]
	[PARAMLITERAL:id]
	mac
	[/PARAMLITERAL]
	[PARAMLITERAL:active]
	[/PARAMLITERAL]
	[PARAM:content]
		1. アクティブ スキームを **UE4Editor - Mac > My Mac 64-bit** に設定するようにします。

		1. **[product] ** メニューから **Build For > Running** を選択します。
	[/PARAM]
[/OBJECT]

[/EXCERPT:Main]
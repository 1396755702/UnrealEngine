INTSourceChangelist:2545745
Availability:Public
Title:AsyncCompute
Crumbs:%ROOT%, Programming, Programming/Rendering, Programming/Rendering/ShaderDevelopment
Description:効率性向上のためにさまざまな GPU をインターリーブするハードウェア機能、 AsyncCompute に関する説明
バージョン：4.9

## 入門編

RHI が Xbox One 向けに非同期計算をサポートするようになりました。 dispatch() コールをレンダリングと非同期的に実行することにより、
未使用の GPU リソースを活用する良い方法です（CU、レジスターや帯域）非同期計算はコンテクストを別途使用して、UE4 が
レンダリングとコンテキストの計算の同期を行う RHI 機能を提供します。
非同期計算でメリットがある領域の特定に Dr PIX が有用です。例えば特定のレンダリングパスを実行中に CU の半分が未使用の場合は、
この CU を非同期計算に使用できる可能性があります。
非同期計算には制限事項がいくつかあります。

 * UAV counter があるバッファはサポートしていません（XDK の制限事項により D3D 警告を作成します)
 * 非同期計算ジョブは PIX GPU キャプチャに表示されません(Timing Capturesには表示されます)。
   PIX はグラフィックスの即時コンテキストだけをキャプチャします（これはプラットフォーム制限です）。
 * ドライバーはオートマティックパイプライン機能を提供しません。フラッシュする必要がある場合は、明示的に **RHICSManualGpuFlush** を呼び出します。
   (例えばあるディスパッチが前回のディスパッチに依存する場合など)

## API 

 * **RHIBeginAsyncComputeJob_DrawThread** (EAsyncComputePriority 優先度)
   はレンダリング スレッドから 非同期計算ジョブを開始します。プライオリティはジョブのために割り当てるシェーダーリソース数の判断に使用します
   (ID3D11XComputeContext::SetLimits経由)。現時点では、 AsyncComputePriority_High と AsyncComputePriority_Default の
   2つのプライオリティがあります。
 * **RHIEndAsyncComputeJob_DrawThread**
   は非同期計算ジョブを終了させます。同期に使用する32ビットの Fence インデックス、または計算が無効またはアクティブな計算ジョブが無い場合は、
   「-1」を返します。
 * **RHIGraphicsWaitOnAsyncComputeJob**
   はグラフィックスの即時コンテキストをコマンドに挿入して、同期ジョブが完了するまでブロックします。 「-1」 を渡すことで無駄な処理を省きます。

RHIBeginAsyncComputeJob_DrawThread と RHIEndAsyncComputeJob_DrawThread の呼び出し間で、 RHI は非同期計算のステートになります。
この時にサポートしている RHI コマンドは、非同期計算コンテクストを通じて実行されます。非サポートの RHI 関数はアサートされます。

## 非同期計算の無効化/有効化

非同期計算はコンパイル時に #で定義した USE_ASYNC_COMPUTE_CONTEXT で有効/無効にすることができます。ランタイム時に _r.AsyncCompute_ コンソール変数で
無効にすることができます。非同期計算が無効になると、非同期計算ブロック内のディスパッチがグラフィックコマンドバッファで
同期的に実行されます。D3D11.1. でサポートしていないため、USE_ASYNC_COMPUTE_CONTEXT は「0」で定義されます。

## PIX

非同期計算のコンテクストジョブは GPU キャプチャでキャプチャされないため、非同期計算が有効時は、
GPU パフォーマンスの画像に誤解を与えてしまうかもしれません。グラフィックスのデバッグのために、非同期計算は上述の「.cvar」を使用して無効にします。
非同期計算は PIX タイミングキャプチャでサポートしています。タイムラインでは以下のように表示されます。

![](PixTimingCapture.png)

## 今後について

この機能は Lionhead Studios が実装しました。XboxOne レンダリングの最適化を目的にこの機能を実装し、ツールとして利用することにしました。

より多くの API がハードウェア機能を公開するようになったため、システムをよりクラスプラットフォーム対応に仕上げました。AsyncCompute を利用する機能は、
（コンソール変数/定義）を必要とせずに別のプラットフォーム上での実行が常に可能で、デバッグも簡単にできます。AsyncCompute のプロファイリングは、予期しないパフォーマンスを引き起こしたり、同期化に対応するためのコーディングに要する労力が必要となるため
使用する際は注意してください。




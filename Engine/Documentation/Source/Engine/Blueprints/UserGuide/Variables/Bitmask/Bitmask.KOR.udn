INTSourceChangelist:2987343
Availability:Public
Title:비트마스크 블루프린트 변수
Crumbs: %ROOT%, Engine, Engine/Blueprints, Engine/Blueprints/Scripting
Description: 블루프린트 인티저 변수를 비트마스크로 선언하여 바이너리 플래그를 보다 깔끔하게 저장할 수 있습니다.
version: 4.12
skilllevel:Intermediate
Parent:Engine/Blueprints/Scripting
type:guide

[TOC (start:2)]

블루프린트는 이제 인티저 변수를 비트마스크로 선언하는 기능을 지원합니다. 이를 통개 개별 마스크 비트(플래그)에 대한 값 설정/해제를 수동 값 입력이 아닌 에디터를 통해 가능해졌습니다.
부가적으로, _Blueprint Enumerations_ (블루프린트 열거형) 역시 **Bitmask Flags** (비트마스크 플래그) 유형으로 선언하여 명시적 비트 플래그 식별자로 사용할 수 있습니다.

## 구성

**블루프린트 에디터** 에서 _블루프린트 클래스_ 작업시 어떤 인티저 변수도 비트마스크로 생성 및 선언 가능합니다. 그를 위해 **디테일** 패널에 보면 인티저 변수에 대해 껐다 켰다 
할 수 있는 **Bitmask** (비트마스크) 특성이 노출되어 있습니다:

![image alt text](image_2.png)이는 C++ 코드의 `Bitmask** 메타데이터에 해당합니다. 켜면 _블루프린트 그래프_ 내 변수 노드의 UI 가 기본 핀 값에 대한 **프로퍼티 에디터** 유저 인터페이스에 일치하도록 바뀝니다:

![image alt text](image_3.png)

부가 **Bitflags Enum** 특성은 비트마스크 변수에 연관된 열거형 타입을 변경해 줍니다. 드롭다운에는 **Bitmask Flags** 특성이 설정된 열거형 타입만 나열됩니다.
이 옵션은 C++ 코드의 `BitmaskEnum=` 메타데이터에 해당합니다.
마지막으로 비트플래그 얼거형 타입이기도 한 블루프린트 열거형 생성이 가능한데, 즉 비트플래그 얼거형 타입은 C++ 코드에 제한되지 않습니다. 이 기능을 켜기 위해서는, 
_블루프린트 열거형 에디터_ 의 **고급** 섹션에 열거형 타입에 대한 **Bitmask Flags** 특성을 켜고 끄는 옵션이 포함되어 있습니다.

![image alt text](image_4.png)

이 옵션을 켜면 네이티브 타입과 함께 해당 타입이 블루프린트 에디터에 생성된 비트마스크 인티저 변수에 대한 **디테일** 패널의 **Bitmask Enum** 드롭다운 메뉴에 포함됩니다.

![image alt text](image_5.png)

## Make Bitmask 노드

Bitmask 리터럴은 _블루프린트 클래스_ 에서 **Make Bitmask** 노드를 통해 생성 가능합니다. 이 노드를 그래프에 추가하려면, **우클릭** 한 후 맥락 메뉴에서 선택하면 됩니다:

![image alt text](image_6.png)

노드가 선택되면, **디테일** 패널에는 비트마스크에 연관되어 있는 열거형 타입 변경 옵션이 포함됩니다. 클래스 내에 정의된 인티저 변수와 마찬가지로, 
**Bitmask Flags** 특성이 켜진 열거형 타입만 다롭다운에 나열됩니다:

![image alt text](image_7.png)![image alt text](image_8.png)

## 비트마스크 사용

비트마스크는 블루프랜트 그래프에서 인티저 변수와 똑같이 취급됩니다. 비트마스크 인티저 출력 핀은 인티저 값을 받는 어느 입력 핀에는 연결할 수 있는데, 
이는 보통 비트단위 OR, AND, XOR, NOT 연산이 해당합니다.

여기 첫 예제에서는, 하나의 **Make Bitmask** 노드가 **Bitwise XOR** 노드에 전달되어 **Target Color Flags** 에 저장된 **Red** 플래그를 토글시키고 있습니다. 컬러 값을 저장하는 열거형은 
**Bitmask Flags** 특성이 켜지기도 합니다.

![image alt text](image_9.png)

두 번째 예제에서는, **Select** 노드, **Bitwise NOT** 과 **Bitwise AND** 노드 모두 인티저를 입력으로 받으므로, 이를 사용해서 세 가지 색 세트 중 하나를 선택, 코들한 다음 
결과를 **Target Color Flags** 비트마스크에 저장합니다.

![image alt text](image_10.png)


INTSourceChangelist:3063666
Availability:Docs
Title:4.On Drop
Crumbs: %ROOT%, Engine, Engine/UMG, Engine/UMG/HowTo
Description:テスト前に、OnDrop 機能を作成して終了します。 
Related: Engine/UMG
Related: Engine/UMG/UserGuide
Version:4.12
SkillLevel:Intermediate

[VAR:Steps]
[OBJECT:Navigation]
	[PARAM:previous]
		[前のステップ](Engine\UMG\HowTo\DragAndDrop\OnDragDetected "%Engine\UMG\HowTo\DragAndDrop\OnDragDetected:title%")
	[/PARAM]
	[PARAM:current]
	[/PARAM]
	[PARAM:home]
		[ドラッグ＆ドロップのウィジェット](Engine\UMG\HowTo\DragAndDrop)
	[/PARAM]
	[PARAM:next]
	[/PARAM]
[/OBJECT]
[/VAR]

%Steps%

仕上げとして、ウィジェットを HUD にドロップすると何が起こるかをスクリプティングし、すべてをテストします。 

## ステップ

1.	**HUD** Widget ブループリントを開き、**[Canvas Panel]** の **[Details]** パネルで、その **[Visibility]** を **[Visible]** に設定します。 

	![](DragDrop13.png)

	Health Bar ウィジェット内で、ドラッグ検知を行っていますが、左マウスボタンを放したときに、それを HUD Widget ブループリントにドロップするようにします。
	HUD がヒット検知を受け取るようにするためには、その **[Visibility]** 設定を **[Visible]** にする必要があります。 

1.	**[Palette]** ウィンドウから、**Health Bar** ウィジェットをグラフの必要な場所に追加します。 

	![](DragDrop14.png)

1.	**グラフ** モードに進み、**OnDrop** 関数のオーバーライドを **[My Blueprint]** パネルから追加します。 

	![](DragDrop15.png)

1.	**OnDrop** 内で、**Operation** から **WidgetDrag にキャスト** します。次に **Widget Reference** と **Drag Offset** を get します。 

	![](DragDrop16.png)

	**OnDrop** 関数の一部としてどの型の演算が行われるかをチェックするためにキャストします。**Widget Drag** でしょうか？ 
	もしそうなら、**WidgetReference** (ドラッグされているウィジェットとして、通過) および **DragOffset** (すなわち、ドラッグを開始した位置) を get します。 

1.	**My Geometry** と **Pointer Event** から、**Absolute to Local** ノードと **GetScreenSpacePosition** ノードを使って、以下のように接続します。

	![](DragDrop17.png)

	これは、左マウスボタンを放して、ウィジェットをドロップする場所である 2D 空間における位置を示します。 
	ここから、**DragOffset** を差し引いて、ドロップするときにどこにウィジェットを配置するかを決定します。 

1.	**Absolute to Local** の **Return Value** から、**DragOffset** を差し引きます。 

1.	**Widget Reference** に対して、**Add to Viewport** と **Set Position in Viewport** を使用して以下のように接続します。 

	[REGION:lightbox]
	[![](DragDrop18.png)](DragDrop18.png)
	[/REGION]

	[REGION:caption]
	クリックしてフルサイズで表示 
	[/REGION]

	**Remove DPIScale** のチェックを外して、**Return Value** のチェックボックスにチェックを入れます。[](Engine/UMG/UserGuide/DPIScaling) を取り除く必要はなく、この関数を true として戻すように処理したからです。 
	このスクリプトでは、ビューポートに再度ドラッグするようにウィジェットを追加し、その位置を、クリックし、ドラッグを開始した場所に基づき設定しました。最後に行う必要があるのは、HUD Widget ブループリントを作成し、表示することです。 

1.	「**Content/ThirdPersonBP/Blueprints** 」フォルダで **ThirdPersonCharacter** ブループリントを開きます。 

1.	**HUD** Widget ブループリントを作成し、**Add to Viewport (ビューポートに追加)** し、**Get Player Controller** を **Show Mouse Cursor** にします。 

	![](DragDrop19.png)

1.	**コンパイル** し、 **保存** します。次に **Play** ボタンをクリックして、エディタでプレイします。 


## 最終結果

エディタでプレイする場合、**左クリック** して画面上のヘルスバーをドラッグして、新しい位置にドロップします。 

[OBJECT:EmbeddedVideo]
[PARAMLITERAL:width]
640
[/PARAMLITERAL]
[PARAMLITERAL:height]
360
[/PARAMLITERAL]
[PARAMLITERAL:videoid]
qUDIkWcQChI
[/PARAMLITERAL]
[/OBJECT]

これは、ドラッグ＆ドロップのプロセスを開始するために必要な要素の一例にすぎません。 
プレイヤーがセーフゾーンの外側にウィジェットをドラッグしないように、または他のウィジェットの上に重ならないようにさらにチェックが必要になることがあります。 

%Steps%

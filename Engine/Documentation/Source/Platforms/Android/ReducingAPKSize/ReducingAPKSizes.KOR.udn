INTSourceChangelist:2619892
Availability:Docs
Title: APK 패키지 크기 축소
Crumbs:%ROOT%, Platforms, Platforms/Android
Description:안드로이드 게임 패키지 파일 크기를 줄이는 방법입니다.
Skilllevel: Intermediate
Version: 4.8

[TOC(start:2 end:3)]

안드로이드 디바이스를 타겟으로 하는 UE4 프로젝트라면 어떤 유형이든, 안드로이드 어플리케이션 패키지 또는 **APK** 파일 크기를 구글 플레이 스토어의 50MB 제한 내로 줄이는 것이 난제가 될 수 있습니다.
이 튜토리얼에서는 UE4 에디터에 제공된 툴만을 사용해서 프로젝트의 최종 APK 패키지 크기를 최대한 줄이는 데 도움이 될 수 있는 방법들에 대해서 다뤄보도록 하겠습니다.

## 새 공백 프로젝트 생성
안드로이드 기반 모바일 프로젝트 작업을 처음 시작할 때, 시작용 콘텐츠가 포함된 프로젝트나 기존의 프로젝트를 기반으로 해서 작업을 했으면 하는 유혹이 있을 것입니다.
**그러면 안돼 안돼!** 그 대신 완전히 공백 C++ 또는 블루프린트 기반 프로젝트를 새로 만든 다음 [이주 툴](Engine/Content/Browser/UserGuide/Migrate) 을 사용해서 사용하고자 하는 콘텐츠를 이주시키셔야 합니다.
이런 식으로 프로젝트에 딱 필요한 콘텐츠만 포함되도록 해야합니다.

## 쿠킹된 콘텐츠 압축
APK 패키지 크기 줄이기에 가장 쉽고 빠른 방법은 UE4 더러 패킹 프로세스 도중 APK 패키지를 압축하라 이르는 것입니다.
패키지 압축을 켜려면 UE4 에디터에서 다음과 같은 작업을 해 줘야 합니다.

[region:note]
주: 압축 쿠킹 패키지 생성 옵션은 UE4 4.8 이상 버전에서만 사용 가능합니다.
[/region]

1. 먼저 **편집** 메뉴의 **프로젝트 세팅** 을 선택하여 프로젝트 세팅을 엽니다.

	![](T_Project_Settings_Menu.png)

1. 프로젝트 섹션 아래 **Packaging** 섹션을 클릭하면 프로젝트 패키징 방식 옵션이 표시됩니다.

	![](T_Project_Packaging.png)

1. 패키징 세팅 하단의 작은 흰색 삼각형을 클릭하면 **고급 프로젝트 세팅** 이 나옵니다.

	![](T_Expose_Advanced_Props.png)

1. **Create compressed cooked packages** (압축 쿠킹 패키지 생성) 옵션을 찾아 이미 켜져있지 않은 경우 켜줍니다.

	![](T_Enable_Comp_Packages.png)

이제 현재 프로젝트 APK 패키지 파일 크기를 기록해 둔 다음, 프로젝트를 다시 패키징합니다.
완료 후 크기를 비교해 보면, 프로젝트에 사용된 콘텐츠에 따라서 두 APK 파일의 크기에 꽤나 큰 차이가 있음을 알 수 있을 것입니다.
사실 압축 쿠킹 패키지 생성 옵션을 켜면 프로젝트에 따라 APK 패키지 파일 크기가 50% 정도까지 압축되는 경우도 종종 볼 수 있습니다.

##  프로젝트의 레벨 구성
간과하고 있다가 APK 패키지 크기가 비대해지게 만드는 요인 한 가지는, 기본으로 로드할 레벨은 무엇이고 레벨 전환시 사용할 레벨은 무엇인지 정하는 프로젝트 옵션을 제대로 구성하지 않은 경우입니다.
어떤 레벨을 어떻게 사용할지 설정하는 방법은 다음과 같습니다.

1. 먼저 **메인 툴바** 에서 **편집** > **프로젝트 세팅** 으로 갑니다.

	 ![](T_Project_Settings.png)

1. 그리고 **프로젝트** 아래 **맵 & 모드** 섹션에서 **Default Maps** (디폴트 맵)에 프로젝트의 맵을 설정합니다.

	![](T_Set_Maps.png)

## 쿠킹되는 콘텐츠 검사
프로젝트에 관련이 있는 콘텐츠만 APK 에 추가되는지 확인하려면, 프로젝트의 **Cooked** 폴더에서 프로젝트 APK 에 추가되는 콘텐츠를 검사하면 됩니다.
Cooked 폴더를 찾을 수 있는 곳은 **(ProjectName)\Saved\Cooked** 에서 프로젝트를 쿠킹한 포맷으로 된 폴더를 선택하면 됩니다.

![](T_Cooked_Content_Folder.png)

아래는 Match 3 샘플 게임에서의 Texture 폴더 그림입니다.
폴더의 콘텐츠가 크기별로 정렬되어 있어서 어느 애셋이 가장 큰지 쉽게 확인할 수 있습니다.
가장 큰 애셋을 확인했으면 UE4 안에서 애셋을 검사하여 애셋의 완성도를 희생시키지 않고도 실제 크기를 줄일 수 있는지 알아보면 됩니다.

![](T_Cooked_Content.png)

## 미사용 콘텐츠 제거
프로젝트가 드이어 스토어에 올리기 위한 패키징 준비가 된 경우, 미사용 또는 테스트용 콘텐츠를 콘텐츠 브라우저에서 선택한 뒤 지워줘야 합니다.
콘텐츠 삭제는 먼저 지우고자 하는 콘텐츠를 선택한 다음 **Delete** 키를 누르거나, 우클릭 메뉴에서 삭제 옵션을 선택하면 됩니다.
프로젝트에서 무언가를 지우려고 할 때, 다음 그림처럼 **애셋 삭제** 메뉴가 뜹니다.

[region:tip]
UE4 에서 오브젝트를 삭제하려면 이렇게 하는 것이 좋으며, 콘텐츠 폴더에서 애셋을 그냥 제거/삭제하는 것은 바람직하지 않습니다.
[/region]

![](T_Delete_Menu.png)

애셋 삭제 메뉴는 지우려고 하는 애셋이 다른 애셋에 레퍼런싱되어있는지 아닌지를 알려줍니다.
레퍼런싱되어있지 않다면 그냥 지우면 되지만, 다른 애셋에 레퍼런싱되어 있다면 **레퍼런스 대체** 옵션을 사용해서 그 애셋으로의 레퍼런스를 프로젝트 패키지에 들어갈 예정인 다른 애셋으로 바꿔주면 됩니다.


## 미사용 플러그인 제거
UE4 에디터 안에서 사용되지 않는 플러그인을 비활성화시키는 것도 불필요한 콘텐츠와 코드가 최종 APK 패키지 파일에 들어가지 않도록 하는 또 한가지 방법입니다.
그 이유는, 일부 플러그인은 정상 작동을 위해 일정한 바탕 애셋 및 코드 세트를 필요로 하기 때문입니다.
플러그인이 비활성화만으로 그 작동에 필요한 애셋과 코드가 프로젝트에서 제거되지는 않습니다.
커다란 텍스처 하나를 줄이거나 제거하는 것만큼 프로젝트 크기를 줄여주지는 못하겠지만, 프로젝트를 50MB 제한에 맞추는 데는 아주 약간이라도 도움이 될 수 있습니다.
UE4 안에서 플러그인을 비활성화시키는 방법은 다음과 같습니다.

[region:note]
	플러그인을 비활성화시켜도 프로젝트의 함수성에 문제가 생기지는 않는지 확실히 테스트하시기 바랍니다.
[/region]

1. 먼저 플러그인 매니저를 엽니다. **메인 툴바** 에서 **창** - **플러그인** 옵션입니다.

	![](T_Open_Plugins_Browser.png)

1. 플러그인 브라우저에서 여러 섹션을 선택하고 **Enabled** 옆의 박스 체크를 해제하여 사용하지 않는 플러그인을 비활성화시킵니다.
  모든 플러그인을 비활성화시켰다면, 굳이 결과 확인을 위해 프로젝트를 다시 패키징할 필요는 없습니다.

	[OBJECT:EmbeddedVideo]
	[PARAMLITERAL:width]
	640
	[/PARAMLITERAL]
	[PARAMLITERAL:height]
	360
	[/PARAMLITERAL]
	[PARAMLITERAL:videoid]
	xLJ01QEvV7Y
	[/PARAMLITERAL]
	[/OBJECT]

